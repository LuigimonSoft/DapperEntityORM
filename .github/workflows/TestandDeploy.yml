
name: Checking all tests

on:
  pull_request:
    branches: [ "*" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-latest  
                             

    env:
      Solution_Name: DapperEntityORM.sln    
      Test_Project_Path: DapperEntityORM.csproj 
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x.x

    - name: Restore dependencies
      run: dotnet restore
        
    - name: Build
      run: dotnet build --no-restore --configuration ${{ matrix.configuration }}
    
    - name: Execute unit test
      run: dotnet test --no-restore --configuration ${{ matrix.configuration }}

    - name: install dotnet-coverage
      run: dotnet tool install --global dotnet-coverage --version 17.13.1

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.3.11

    - name: Cache SonarQube Cloud packages
      uses: actions/cache@v4
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarQube Cloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarQube Cloud scanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: SonarCloud - Begin Analysis
      run: |
        dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
          /o:"${{ secrets.SONAR_ORG }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration ${{ matrix.configuration }}

    - name: Run Tests with Coverage
      run: dotnet-coverage collect "dotnet test --no-build --configuration ${{ matrix.configuration }}" -f xml -o "coverage.xml"
             
    - name: SonarCube - SonaCloud -> SonarCloud - End Analysis
      run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
